/* I'm using the !important argument abundantly here, which is bad practice in terms of accessibility. This will be corrected in later iterations and just done for testing purposes */

* {
    /*border: 1px solid red !important;*/
    box-sizing: border-box;
}

html {
    font-size: 24px;
}

body {
    font-family: 'Poppins', sans-serif;
    text-align: center;
}

a {
  color: black;
  text-decoration: none;
}

a:hover {
  text-decoration: underline  ;
}

.container {
    display: grid;
    margin: auto;
    grid-gap: 30px;
    grid-template-columns: repeat(3, 1fr);
  }

  /* if .container * {} all descendants are flex, if .container > * {} only children are! */

  
header {
  display: flex;
  justify-content: center;
  align-content: center;
  grid-column-end: span 3;
}

header h1 {
  padding: 20px;
  font-size: 2rem;
  letter-spacing: 5px;
}

nav {
  display: flex;
  justify-content: center;
  align-content: center;
  grid-column-end: span 3;
  margin: 0 10%;
  justify-content: space-around;
}
nav h2 {
  display: inline-block;
}

main {
  grid-column-end: span 3;
}

.mission {
  grid-column-end: span 3;
  grid-row-end: span 1;
  display: flex;
  min-height: 300px;
  background-image: url("https://content.codecademy.com/PRO/independent-practice-projects/flexbox-business-site/img/skyscrapers.jpg");
  justify-content: center;
  align-items: center;
}

.mission .banner {
  /* margin: auto centers the div vertically inside main, when the parent-flexbox does NOT specify: justify-content: center AND align-items: center*/ 
  background-color: white;
  width: 100%;
  padding: 20px;
}

.portfolio {
  grid-column-end: span 3;
  grid-row-end: span 1;
  text-align: left !important;
}

footer {
  grid-column-end: span 3;
  background-color: dodgerblue;
}
